{"version":3,"sources":["EnchancedRegExp.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,MAAM,GAAG,SAAS,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE;AAC1C,MAAK,IAAI,GAAG,GAAG,CAAC,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,GAAG,OAAO,GAAG;AACzD,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,QAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC;AACjC,OAAI,KAAK,GAAG,SAAS,CAAC;AACtB,OAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,KAAM,IAAI,EAAE;AACpD,SAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACvB,OAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;AACjC,UAAM;IACN;GACD;EACD;CACD,CAAC;;AAEF,IAAI,MAAM,GAAG,SAAS,MAAM,CAAC,KAAK,EAAE;AACnC,QAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;CACnC,CAAC;AACF,MAAM,CAAC,oBAAoB,EAAE,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,MAAM,CAAC,KAAK,EAAE;AACvF,SAAO,MAAM,CAAC,KAAK,CAAC,CAAC;EACrB,EAAE,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,MAAM,CAAC,KAAK,EAAE;AAC/D,SAAO,MAAM,CAAC,KAAK,CAAC,CAAC;EACrB,EAAE,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,SAAS,MAAM,CAAC,KAAK,EAAE;AAC/D,SAAO,MAAM,CAAC,KAAK,CAAC,CAAC;EACrB,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC","file":"EnchancedRegExp-compiled.js","sourcesContent":["\"use strict\";\n\nvar parser = function parser(input, match) {\n\tfor (var pos = 0, lastPos = input.length; pos < lastPos;) {\n\t\tfor (var i = 0; i < match.length; i++) {\n\t\t\tmatch[i].pattern.lastIndex = pos;\n\t\t\tvar found = undefined;\n\t\t\tif ((found = match[i].pattern.exec(input)) !== null) {\n\t\t\t\tmatch[i].action(found);\n\t\t\t\tpos = match[i].pattern.lastIndex;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar report = function report(match) {\n\tconsole.log(JSON.stringify(match));\n};\nparser(\"Foo 1 Bar 7 Baz 42\", [{ pattern: /^Foo\\s+(\\d+)/g, action: function action(match) {\n\t\treturn report(match);\n\t} }, { pattern: /^Bar\\s+(\\d+)/g, action: function action(match) {\n\t\treturn report(match);\n\t} }, { pattern: /^Baz\\s+(\\d+)/g, action: function action(match) {\n\t\treturn report(match);\n\t} }, { pattern: /^\\s*/g, action: function action(match) {} }]);"]}