{"version":3,"sources":["DestructuringAssignment4.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,cAAc,GAAG,CAAC,YAAY;AAAE,UAAS,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE;AAAE,MAAI,IAAI,GAAG,EAAE,CAAC,AAAC,IAAI,EAAE,GAAG,IAAI,CAAC,AAAC,IAAI,EAAE,GAAG,KAAK,CAAC,AAAC,IAAI,EAAE,GAAG,SAAS,CAAC,AAAC,IAAI;AAAE,QAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,CAAA,AAAC,EAAE,EAAE,GAAG,IAAI,EAAE;AAAE,QAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,AAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;IAAE;GAAE,CAAC,OAAO,GAAG,EAAE;AAAE,KAAE,GAAG,IAAI,CAAC,AAAC,EAAE,GAAG,GAAG,CAAC;GAAE,SAAS;AAAE,OAAI;AAAE,QAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;IAAE,SAAS;AAAE,QAAI,EAAE,EAAE,MAAM,EAAE,CAAC;IAAE;GAAE,AAAC,OAAO,IAAI,CAAC;EAAE,AAAC,OAAO,UAAU,GAAG,EAAE,CAAC,EAAE;AAAE,MAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAAE,UAAO,GAAG,CAAC;GAAE,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE;AAAE,UAAO,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;GAAE,MAAM;AAAE,SAAM,IAAI,SAAS,CAAC,sDAAsD,CAAC,CAAC;GAAE;EAAE,CAAC;CAAE,CAAA,EAAG,CAAC;;AAE1pB,SAAS,CAAC,CAAC,IAAI,EAAE;AAChB,KAAI,KAAK,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;AAEpC,KAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACpB,KAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEnB,QAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CACvB;AACD,SAAS,CAAC,CAAC,KAAK,EAAE;AACjB,KAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;AACnB,KAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;;AAElB,QAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAClB;AACD,SAAS,CAAC,CAAC,KAAK,EAAE;AACjB,KAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AACtB,KAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;;AAEpB,QAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;CACvB;AACD,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3B,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC","file":"DestructuringAssignment4-compiled.js","sourcesContent":["\"use strict\";\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\nfunction f(_ref) {\n\tvar _ref2 = _slicedToArray(_ref, 2);\n\n\tvar name = _ref2[0];\n\tvar val = _ref2[1];\n\n\tconsole.log(name, val);\n}\nfunction g(_ref3) {\n\tvar n = _ref3.name;\n\tvar v = _ref3.val;\n\n\tconsole.log(n, v);\n}\nfunction h(_ref4) {\n\tvar name = _ref4.name;\n\tvar val = _ref4.val;\n\n\tconsole.log(name, val);\n}\nf([\"bar\", 42]);\ng({ name: \"foo\", val: 7 });\nh({ name: \"bar\", val: 42 });"]}