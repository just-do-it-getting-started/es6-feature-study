{"version":3,"sources":["promise2.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,cAAc,GAAG,CAAC,YAAY;AAAE,UAAS,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE;AAAE,MAAI,IAAI,GAAG,EAAE,CAAC,AAAC,IAAI,EAAE,GAAG,IAAI,CAAC,AAAC,IAAI,EAAE,GAAG,KAAK,CAAC,AAAC,IAAI,EAAE,GAAG,SAAS,CAAC,AAAC,IAAI;AAAE,QAAK,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,CAAA,AAAC,EAAE,EAAE,GAAG,IAAI,EAAE;AAAE,QAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,AAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,MAAM;IAAE;GAAE,CAAC,OAAO,GAAG,EAAE;AAAE,KAAE,GAAG,IAAI,CAAC,AAAC,EAAE,GAAG,GAAG,CAAC;GAAE,SAAS;AAAE,OAAI;AAAE,QAAI,CAAC,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC;IAAE,SAAS;AAAE,QAAI,EAAE,EAAE,MAAM,EAAE,CAAC;IAAE;GAAE,AAAC,OAAO,IAAI,CAAC;EAAE,AAAC,OAAO,UAAU,GAAG,EAAE,CAAC,EAAE;AAAE,MAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AAAE,UAAO,GAAG,CAAC;GAAE,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE;AAAE,UAAO,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;GAAE,MAAM;AAAE,SAAM,IAAI,SAAS,CAAC,sDAAsD,CAAC,CAAC;GAAE;EAAE,CAAC;CAAE,CAAA,EAAG,CAAC;;AAE1pB,SAAS,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE;AAClD,WAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;CAC5B;AACD,IAAI,aAAa,GAAG,SAAS,aAAa,CAAC,GAAG,EAAE,OAAO,EAAE;AACxD,QAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC7C,YAAU,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;EAC1C,CAAC,CAAC;CACH,CAAC;AACF,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,wBAAwB,EAAE,GAAG,CAAC,EAAE,aAAa,CAAC,wBAAwB,EAAE,GAAG,CAAC,EAAE,aAAa,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE;AAC5K,KAAI,KAAK,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;AAEpC,KAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACnB,KAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACnB,KAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEnB,QAAO,CAAC,GAAG,CAAC,eAAe,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;CACnE,EAAE,UAAU,GAAG,EAAE;AACjB,QAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;CAC7B,CAAC,CAAC","file":"promise2-compiled.js","sourcesContent":["\"use strict\";\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\nfunction fetchAsync(url, timeout, onData, onError) {\n\tsetTimeout(onData(1), 1000);\n}\nvar fetchPromised = function fetchPromised(url, timeout) {\n\treturn new Promise(function (resolve, reject) {\n\t\tfetchAsync(url, timeout, resolve, reject);\n\t});\n};\nPromise.all([fetchPromised(\"http://backend/foo.txt\", 500), fetchPromised(\"http://backend/bar.txt\", 500), fetchPromised(\"http://backend/baz.txt\", 500)]).then(function (data) {\n\tvar _data = _slicedToArray(data, 3);\n\n\tvar foo = _data[0];\n\tvar bar = _data[1];\n\tvar baz = _data[2];\n\n\tconsole.log(\"success: foo=\" + foo + \" bar=\" + bar + \" baz=\" + baz);\n}, function (err) {\n\tconsole.log(\"error: \" + err);\n});"]}